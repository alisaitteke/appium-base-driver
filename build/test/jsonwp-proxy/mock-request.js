"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

function resFixture(url, method) {
  if (/\/status$/.test(url)) {
    return [200, {
      status: 0,
      value: {
        foo: 'bar'
      }
    }];
  }

  if (/\/element\/bad\/text$/.test(url)) {
    return [500, {
      status: 11,
      value: {
        message: 'Invisible element'
      }
    }];
  }

  if (/\/element\/200\/text$/.test(url)) {
    return [200, {
      status: 11,
      value: {
        message: 'Invisible element'
      }
    }];
  }

  if (/\/element\/200\/value$/.test(url)) {
    return [200, {
      status: 0,
      sessionId: 'innersessionid',
      value: 'foobar'
    }];
  }

  if (/\/session$/.test(url) && method === 'POST') {
    return [200, {
      status: 0,
      sessionId: '123',
      value: {
        browserName: 'boo'
      }
    }];
  }

  if (/\/nochrome$/.test(url)) {
    return [100, {
      status: 0,
      value: {
        message: 'chrome not reachable'
      }
    }];
  }

  throw new Error("Can't handle url " + url);
}

async function request(opts) {
  if (/badurl$/.test(opts.url)) {
    throw new Error('noworky');
  }

  let [statusCode, body] = resFixture(opts.url, opts.method, opts.json);
  let response = {
    statusCode,
    headers: {
      'content-type': 'application/json; charset=utf-8'
    },
    body
  };
  return response;
}

var _default = request;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvanNvbndwLXByb3h5L21vY2stcmVxdWVzdC5qcyJdLCJuYW1lcyI6WyJyZXNGaXh0dXJlIiwidXJsIiwibWV0aG9kIiwidGVzdCIsInN0YXR1cyIsInZhbHVlIiwiZm9vIiwibWVzc2FnZSIsInNlc3Npb25JZCIsImJyb3dzZXJOYW1lIiwiRXJyb3IiLCJyZXF1ZXN0Iiwib3B0cyIsInN0YXR1c0NvZGUiLCJib2R5IiwianNvbiIsInJlc3BvbnNlIiwiaGVhZGVycyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsU0FBU0EsVUFBVCxDQUFxQkMsR0FBckIsRUFBMEJDLE1BQTFCLEVBQWtDO0FBQ2hDLE1BQUksWUFBWUMsSUFBWixDQUFpQkYsR0FBakIsQ0FBSixFQUEyQjtBQUN6QixXQUFPLENBQUMsR0FBRCxFQUFNO0FBQUNHLE1BQUFBLE1BQU0sRUFBRSxDQUFUO0FBQVlDLE1BQUFBLEtBQUssRUFBRTtBQUFDQyxRQUFBQSxHQUFHLEVBQUU7QUFBTjtBQUFuQixLQUFOLENBQVA7QUFDRDs7QUFDRCxNQUFJLHdCQUF3QkgsSUFBeEIsQ0FBNkJGLEdBQTdCLENBQUosRUFBdUM7QUFDckMsV0FBTyxDQUFDLEdBQUQsRUFBTTtBQUFDRyxNQUFBQSxNQUFNLEVBQUUsRUFBVDtBQUFhQyxNQUFBQSxLQUFLLEVBQUU7QUFBQ0UsUUFBQUEsT0FBTyxFQUFFO0FBQVY7QUFBcEIsS0FBTixDQUFQO0FBQ0Q7O0FBQ0QsTUFBSSx3QkFBd0JKLElBQXhCLENBQTZCRixHQUE3QixDQUFKLEVBQXVDO0FBQ3JDLFdBQU8sQ0FBQyxHQUFELEVBQU07QUFBQ0csTUFBQUEsTUFBTSxFQUFFLEVBQVQ7QUFBYUMsTUFBQUEsS0FBSyxFQUFFO0FBQUNFLFFBQUFBLE9BQU8sRUFBRTtBQUFWO0FBQXBCLEtBQU4sQ0FBUDtBQUNEOztBQUNELE1BQUkseUJBQXlCSixJQUF6QixDQUE4QkYsR0FBOUIsQ0FBSixFQUF3QztBQUN0QyxXQUFPLENBQUMsR0FBRCxFQUFNO0FBQUNHLE1BQUFBLE1BQU0sRUFBRSxDQUFUO0FBQVlJLE1BQUFBLFNBQVMsRUFBRSxnQkFBdkI7QUFBeUNILE1BQUFBLEtBQUssRUFBRTtBQUFoRCxLQUFOLENBQVA7QUFDRDs7QUFDRCxNQUFJLGFBQWFGLElBQWIsQ0FBa0JGLEdBQWxCLEtBQTBCQyxNQUFNLEtBQUssTUFBekMsRUFBaUQ7QUFDL0MsV0FBTyxDQUFDLEdBQUQsRUFBTTtBQUFDRSxNQUFBQSxNQUFNLEVBQUUsQ0FBVDtBQUFZSSxNQUFBQSxTQUFTLEVBQUUsS0FBdkI7QUFBOEJILE1BQUFBLEtBQUssRUFBRTtBQUFDSSxRQUFBQSxXQUFXLEVBQUU7QUFBZDtBQUFyQyxLQUFOLENBQVA7QUFDRDs7QUFDRCxNQUFJLGNBQWNOLElBQWQsQ0FBbUJGLEdBQW5CLENBQUosRUFBNkI7QUFDM0IsV0FBTyxDQUFDLEdBQUQsRUFBTTtBQUFDRyxNQUFBQSxNQUFNLEVBQUUsQ0FBVDtBQUFZQyxNQUFBQSxLQUFLLEVBQUU7QUFBQ0UsUUFBQUEsT0FBTyxFQUFFO0FBQVY7QUFBbkIsS0FBTixDQUFQO0FBQ0Q7O0FBQ0QsUUFBTSxJQUFJRyxLQUFKLENBQVUsc0JBQXNCVCxHQUFoQyxDQUFOO0FBQ0Q7O0FBRUQsZUFBZVUsT0FBZixDQUF3QkMsSUFBeEIsRUFBOEI7QUFDNUIsTUFBSSxVQUFVVCxJQUFWLENBQWVTLElBQUksQ0FBQ1gsR0FBcEIsQ0FBSixFQUE4QjtBQUM1QixVQUFNLElBQUlTLEtBQUosQ0FBVSxTQUFWLENBQU47QUFDRDs7QUFFRCxNQUFJLENBQUNHLFVBQUQsRUFBYUMsSUFBYixJQUFxQmQsVUFBVSxDQUFDWSxJQUFJLENBQUNYLEdBQU4sRUFBV1csSUFBSSxDQUFDVixNQUFoQixFQUF3QlUsSUFBSSxDQUFDRyxJQUE3QixDQUFuQztBQUNBLE1BQUlDLFFBQVEsR0FBRztBQUNiSCxJQUFBQSxVQURhO0FBRWJJLElBQUFBLE9BQU8sRUFBRTtBQUFDLHNCQUFnQjtBQUFqQixLQUZJO0FBR2JILElBQUFBO0FBSGEsR0FBZjtBQUtBLFNBQU9FLFFBQVA7QUFDRDs7ZUFFY0wsTyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHJlc0ZpeHR1cmUgKHVybCwgbWV0aG9kKSB7XG4gIGlmICgvXFwvc3RhdHVzJC8udGVzdCh1cmwpKSB7XG4gICAgcmV0dXJuIFsyMDAsIHtzdGF0dXM6IDAsIHZhbHVlOiB7Zm9vOiAnYmFyJ319XTtcbiAgfVxuICBpZiAoL1xcL2VsZW1lbnRcXC9iYWRcXC90ZXh0JC8udGVzdCh1cmwpKSB7XG4gICAgcmV0dXJuIFs1MDAsIHtzdGF0dXM6IDExLCB2YWx1ZToge21lc3NhZ2U6ICdJbnZpc2libGUgZWxlbWVudCd9fV07XG4gIH1cbiAgaWYgKC9cXC9lbGVtZW50XFwvMjAwXFwvdGV4dCQvLnRlc3QodXJsKSkge1xuICAgIHJldHVybiBbMjAwLCB7c3RhdHVzOiAxMSwgdmFsdWU6IHttZXNzYWdlOiAnSW52aXNpYmxlIGVsZW1lbnQnfX1dO1xuICB9XG4gIGlmICgvXFwvZWxlbWVudFxcLzIwMFxcL3ZhbHVlJC8udGVzdCh1cmwpKSB7XG4gICAgcmV0dXJuIFsyMDAsIHtzdGF0dXM6IDAsIHNlc3Npb25JZDogJ2lubmVyc2Vzc2lvbmlkJywgdmFsdWU6ICdmb29iYXInfV07XG4gIH1cbiAgaWYgKC9cXC9zZXNzaW9uJC8udGVzdCh1cmwpICYmIG1ldGhvZCA9PT0gJ1BPU1QnKSB7XG4gICAgcmV0dXJuIFsyMDAsIHtzdGF0dXM6IDAsIHNlc3Npb25JZDogJzEyMycsIHZhbHVlOiB7YnJvd3Nlck5hbWU6ICdib28nfX1dO1xuICB9XG4gIGlmICgvXFwvbm9jaHJvbWUkLy50ZXN0KHVybCkpIHtcbiAgICByZXR1cm4gWzEwMCwge3N0YXR1czogMCwgdmFsdWU6IHttZXNzYWdlOiAnY2hyb21lIG5vdCByZWFjaGFibGUnfX1dO1xuICB9XG4gIHRocm93IG5ldyBFcnJvcihcIkNhbid0IGhhbmRsZSB1cmwgXCIgKyB1cmwpO1xufVxuXG5hc3luYyBmdW5jdGlvbiByZXF1ZXN0IChvcHRzKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgcmVxdWlyZS1hd2FpdFxuICBpZiAoL2JhZHVybCQvLnRlc3Qob3B0cy51cmwpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdub3dvcmt5Jyk7XG4gIH1cblxuICBsZXQgW3N0YXR1c0NvZGUsIGJvZHldID0gcmVzRml4dHVyZShvcHRzLnVybCwgb3B0cy5tZXRob2QsIG9wdHMuanNvbik7XG4gIGxldCByZXNwb25zZSA9IHtcbiAgICBzdGF0dXNDb2RlLFxuICAgIGhlYWRlcnM6IHsnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgnfSxcbiAgICBib2R5XG4gIH07XG4gIHJldHVybiByZXNwb25zZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVxdWVzdDtcbiJdLCJmaWxlIjoidGVzdC9qc29ud3AtcHJveHkvbW9jay1yZXF1ZXN0LmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
